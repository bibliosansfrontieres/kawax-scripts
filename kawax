#!/bin/bash

#
# configuration
#

DEBUGMODE=${DEBUGMODE:-0}

CATALOGS_CACHE=/var/kawax/catalogs

CATALOGS=(
    http://catalog.ideascube.org/kiwix.yml
    http://catalog.ideascube.org/static-sites.yml
    http://catalog.ideascube.org/bibliotecamovil.yml
    http://catalog.yohanboniface.me/catalog.yml
	http://catalog.ideascube.org/omeka.yml
)

URLS_KIWIX=/var/kawax/kiwix.rsync
URLS_OTHER=/var/kawax/others.wget

PACKAGE_CACHE=/srv/kawax
PACKAGE_CACHE_KIWIX=${PACKAGE_CACHE}/download.kiwix.org/
PACKAGE_CACHE_OTHER=${PACKAGE_CACHE}/other/

SYNOLOGY_CACHE=/srv/synology

SYNOLOGY_USER=root
SYNOLOGY_ADDR=synology

KIWIX_LOGFILE="/tmp/rsync_kiwix_$( date +%Y%m%d%H%M%S ).log"
WGET_LOGFILE="/tmp/wget_other_$( date +%Y%m%d%H%M%S ).log"
ERRORS_MAILTO=${ERRORS_MAILTO:-it@bibliosansfrontieres.org}

WGET_USERAGENT="Mirroring/catalog.ideascube.org"
WGET_OPTIONS="--timestamping --recursive --mirror --user-agent='$WGET_USERAGENT'"

# long options translated from the kiwix mirroring one-liner
RSYNC_OPTIONS="--compress --recursive --links --perms --times --devices --specials --delete"

#
# functions
#

show_usage() {
    echo "Usage: $( basename $0 ) <action>

Actions:

    update_catalogs     Update the catalogs cache
    extract_urls        Extracts the URLs from catalogs to files
    rsync_kiwix         Downloads ZIMs from Kiwix
    wget_other          Downloads the other packages
    rsync_synology      Updates the Synology cache
    all                 All of the above
    help                This very help message
"
}

edebug() {
    [[ $DEBUGMODE -eq 1 ]] && echo "[+] $@" >&2
}

get_latest_zims_from_kiwix() {
    for ENTRY in `rsync --recursive --list-only download.kiwix.org::download.kiwix.org/portable/ | \
        grep ".zip" | grep -F -v '_nopic_' | tr -s ' ' | cut -d ' ' -f5 | sort -r` ; do
        RADICAL=`echo $ENTRY | sed 's/_20[0-9][0-9]-[0-9][0-9]\.zim//g'`
        if [[ $LAST != $RADICAL ]] ; then
            echo $ENTRY
            LAST=$RADICAL
        fi
    done
}

update_catalogs() {
    for i in ${CATALOGS[@]} ; do
        edebug $i
        wget $i --quiet --force-directories --directory-prefix ${CATALOGS_CACHE}/
    done
}

rsync_kiwix() {
    sed -i -e 's@^.*//download.kiwix.org/@@g' $URLS_KIWIX
    rsync $RSYNC_OPTIONS --files-from=$URLS_KIWIX \
        download.kiwix.org::download.kiwix.org/ ${PACKAGE_CACHE_KIWIX} \
        --log-file=$KIWIX_LOGFILE
    rsync_kiwix_report
    [[ $DEBUGMODE -eq 1 ]] || rm $KIWIX_LOGFILE
}

rsync_kiwix_report() {
    [ -z "$FROM_CRONJOB" ] && return
    edebug "sending report... (\$FROM_CRONJOB is set to ${FROM_CRONJOB})"
    awk ' /No such file or directory/ { print $6 } ' $KIWIX_LOGFILE \
        | tr -d '"' | mail -s 'kawax rsync_kiwix errors' $ERRORS_MAILTO
}

wget_other() {
    # FIXME: the logfile should be parsed using some awk-fu to summarize the errors.
    wget --input-file=$URLS_OTHER $WGET_OPTIONS -P ${PACKAGE_CACHE}/other/ \
        --output-file=$WGET_LOGFILE --accept '*.zip'
    ret=$? ; edebug "wget return code: $ret"
    [ "$ret" != 0 ] && wget_other_report
    [[ $DEBUGMODE -eq 1 ]] || rm $WGET_LOGFILE
}

wget_other_report() {
    [ -z "$FROM_CRONJOB" ] && return
    edebug "sending report... (\$FROM_CRONJOB is set to ${FROM_CRONJOB})"
    cat $WGET_LOGFILE | mail -s 'kawax wget_other errors' $ERRORS_MAILTO
}

extract_urls() {
    rm -f $URLS_KIWIX $URLS_OTHER
    for thiscatalog in $( find $CATALOGS_CACHE -type f -name '*.yml' ) ; do
        edebug "Getting URLs from ${thiscatalog}..."
        while read thisline ; do
            thisurl=$( echo $thisline | awk ' /url:/ { print $2 }' | tr -d [\'\"] )
            if [[ "$thisurl" =~ "//download.kiwix.org" ]] ; then
                edebug "thisurl->kiwix-> $thisurl"
                echo $thisurl >> $URLS_KIWIX
            elif [ -n "$thisurl" ] ; then
                edebug "thisurl->others-> $thisurl"
                echo $thisurl >> $URLS_OTHER
            fi
        done < $thiscatalog
    done
}

rsync_synology() {
    # FIXME: test the link before
    rsync --delete -a ${SYNOLOGY_USER}@${SYNOLOGY_ADDR}:'/volume1/Contenus-Educ/Gestion\ des\ contenus' ${SYNOLOGY_CACHE}/
    chmod a+rX -R $SYNOLOGY_CACHE
}

# init
mkdir -p $CATALOGS_CACHE $PACKAGE_CACHE_KIWIX $PACKAGE_CACHE_OTHER $SYNOLOGY_CACHE


case "$1" in
    update_catalogs|extract_urls|rsync_synology)
        $1
        ;;
    rsync_kiwix|wget_other)
        update_catalogs
        extract_urls
        $1
        ;;
    all)
        update_catalogs
        extract_urls
        rsync_kiwix
        wget_other
        rsync_synology
        ;;
    help)
        show_usage
        ;;
    *)
        echo "Error: unknown action: $1" >&2
        show_usage
        exit 1
        ;;
esac

